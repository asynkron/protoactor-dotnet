syntax = "proto3";
package cluster.pubsub;
option csharp_namespace = "Proto.Cluster.PubSub";
import "Proto.Actor/Protos.proto";
import "ClusterContracts.proto";

message SubscriberIdentity {
  oneof Identity {
    actor.PID pid = 1;
    cluster.ClusterIdentity cluster_identity = 2;
  }
}

message Subscribers {
  repeated SubscriberIdentity subscribers = 1;
}

message SubscribeRequest {
  SubscriberIdentity subscriber = 1;
}

message SubscribeResponse {}

message UnsubscribeRequest {
  SubscriberIdentity subscriber = 1;
}

message UnsubscribeResponse {}

// message sent from publisher to topic actor
message PubSubBatchTransport {
  repeated string type_names = 1;
  repeated PubSubEnvelope envelopes = 2;
}

message PubSubEnvelope {
  int32 type_id = 1;
  bytes message_data = 2;
  int32 serializer_id = 3;
}

// message sent from topic to delivery actor
message DeliverBatchRequestTransport {
  Subscribers subscribers = 1;
  PubSubBatchTransport batch = 2;
}

// response from delivery actor to topic
message DeliverBatchResponse {
  repeated SubscriberDeliveryReport invalid_deliveries = 1;
}

message SubscriberDeliveryReport {
  SubscriberIdentity subscriber = 1;
  DeliveryStatus status = 2;
}

enum DeliveryStatus {
  Delivered = 0;
  SubscriberNoLongerReachable = 1;
  OtherError = 127;
}

// message posted to subscriber's mailbox, that is then unrolled to single messages, and has ability to auto respond
message PubSubAutoRespondBatchTransport {
  repeated string type_names = 1;
  repeated PubSubEnvelope envelopes = 2;
}

// publish ack response
message PublishResponse {}
