
syntax = "proto3";
package remote;
option csharp_namespace = "Proto.Remote";

import "Proto.Actor/Protos.proto";

message MessageBatch {
  repeated string type_names = 1;
  repeated string target_names = 2;
  repeated MessageEnvelope envelopes = 3;
}

message MessageEnvelope {
  int32 type_id = 1;
  bytes message_data = 2;
  int32 target = 3;
  actor.PID sender = 4;
  int32 serializer_id = 5;
  MessageHeader message_header = 6;
  uint32 request_id = 7;
}

message MessageHeader {
  map<string, string> header_data = 1;
}

message ActorPidRequest {
  string name = 1;
  string kind = 2;
}

message ActorPidResponse {
  actor.PID pid = 1;
  int32 status_code = 2;
}

message Unit {}

message ConnectRequest {
  string member_id = 1;
}

message ConnectResponse {
  //int32 default_serializer_id = 1; Obsoleted
  string member_id = 2;
  bool blocked = 3;
}

service Remoting {
  rpc Connect(ConnectRequest) returns (ConnectResponse) {}
  rpc Receive (stream MessageBatch) returns (stream Unit) {}
  rpc ListProcesses(ListProcessesRequest) returns (ListProcessesResponse) {}
  rpc GetProcessDiagnostics(GetProcessDiagnosticsRequest) returns (GetProcessDiagnosticsResponse) {}
}

message ListProcessesRequest {
  string name = 1;
}

message ListProcessesResponse {
  repeated actor.PID pids = 1;
}

message GetProcessDiagnosticsRequest {
  actor.PID pid = 1;
}

message GetProcessDiagnosticsResponse {
  string diagnostics_string= 1;
}