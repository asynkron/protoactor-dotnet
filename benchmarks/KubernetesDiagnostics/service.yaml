apiVersion: v1
kind: Namespace
metadata:
  name: my-namespace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: proto-cluster
  namespace: my-namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: proto-cluster
  namespace: my-namespace
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: proto-cluster
  labels:
    app: kubediag
  namespace: my-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: proto-cluster
subjects:
  - kind: ServiceAccount
    name: proto-cluster
---
apiVersion: v1
kind: Service
metadata:
  name: kubediag
  labels:
    app: kubediag
  namespace: my-namespace
spec:
  ports:
    - port: 8080
      name: protoactor
  selector:
    app: kubediag
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubediag
  namespace: my-namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kubediag
  template:
    metadata:
      labels:
        app: kubediag
        version: v1
    spec:
      serviceAccountName: proto-cluster
      containers:
        - name: kubediag
          image: rogeralsing/kubediag:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: "REDIS"
              value: "redis"
            - name: PROTOPORT
              value: "8080"
            - name: PROTOHOST
              value: "0.0.0.0"
            - name: "PROTOHOSTPUBLIC"
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
